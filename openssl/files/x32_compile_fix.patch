UpstreamStatus: Pending

Received from H J Liu @ Intel

This patch fixes the compilation for x32 build
Signed-Off-By: Nitin A Kamble <nitin.a.kamble@intel.com> 2011/07/13

Index: openssl-0.9.8r/Configure
===================================================================
--- openssl-0.9.8r.orig/Configure
+++ openssl-0.9.8r/Configure
@@ -390,6 +390,7 @@ my %table=(
 "linux-ia64-ecc","ecc:-DL_ENDIAN -DTERMIO -O2 -Wall -no_cpprt::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHUNK:${ia64_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "linux-ia64-icc","icc:-DL_ENDIAN -DTERMIO -O2 -Wall -no_cpprt::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHUNK:${ia64_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "linux-x86_64",	"gcc:-m64 -DL_ENDIAN -DTERMIO -O3 -Wall -DMD32_REG_T=int::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHUNK DES_INT DES_UNROLL:${x86_64_asm}:dlfcn:linux-shared:-fPIC:-m64:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
+"linux-x32",	"gcc:-mx32 -DL_ENDIAN -DTERMIO -Wall -DMD32_REG_T=int::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT RC4_CHUNK DES_INT DES_UNROLL:${x86_64_asm}:dlfcn:linux-shared:-fPIC:-mx32:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 #### SPARC Linux setups
 # Ray Miller <ray.miller@computing-services.oxford.ac.uk> has patiently
 # assisted with debugging of following two configs.
Index: openssl-0.9.8r/crypto/bn/asm/x86_64-gcc.c
===================================================================
--- openssl-0.9.8r.orig/crypto/bn/asm/x86_64-gcc.c
+++ openssl-0.9.8r/crypto/bn/asm/x86_64-gcc.c
@@ -55,7 +55,11 @@
  *    machine.
  */
 
+#if defined _WIN64 || !defined __LP64__
+#define BN_ULONG unsigned long long
+#else
 #define BN_ULONG unsigned long
+#endif
 
 #undef mul
 #undef mul_add
@@ -188,9 +192,9 @@ BN_ULONG bn_add_words (BN_ULONG *rp, con
 	asm (
 	"	subq	%2,%2		\n"
 	".align 16			\n"
-	"1:	movq	(%4,%2,8),%0	\n"
-	"	adcq	(%5,%2,8),%0	\n"
-	"	movq	%0,(%3,%2,8)	\n"
+	"1:	movq	(%q4,%2,8),%0	\n"
+	"	adcq	(%q5,%2,8),%0	\n"
+	"	movq	%0,(%q3,%2,8)	\n"
 	"	leaq	1(%2),%2	\n"
 	"	loop	1b		\n"
 	"	sbbq	%0,%0		\n"
@@ -211,9 +215,9 @@ BN_ULONG bn_sub_words (BN_ULONG *rp, con
 	asm (
 	"	subq	%2,%2		\n"
 	".align 16			\n"
-	"1:	movq	(%4,%2,8),%0	\n"
-	"	sbbq	(%5,%2,8),%0	\n"
-	"	movq	%0,(%3,%2,8)	\n"
+	"1:	movq	(%q4,%2,8),%0	\n"
+	"	sbbq	(%q5,%2,8),%0	\n"
+	"	movq	%0,(%q3,%2,8)	\n"
 	"	leaq	1(%2),%2	\n"
 	"	loop	1b		\n"
 	"	sbbq	%0,%0		\n"
--- openssl-0.9.8r.orig/crypto/bn/bn.h	2011-11-29 13:30:40.855058606 -0800
+++ openssl-0.9.8r/crypto/bn/bn.h	2011-11-29 13:30:28.377120563 -0800
@@ -172,6 +172,13 @@ extern "C" {
 # endif
 #endif
 
+/* Address type.  */
+#ifdef _WIN64
+#define BN_ADDR unsigned long long
+#else
+#define BN_ADDR unsigned long
+#endif
+
 /* assuming long is 64bit - this is the DEC Alpha
  * unsigned long long is only 64 bits :-(, don't define
  * BN_LLONG for the DEC Alpha */
--- openssl-0.9.8r.orig/crypto/bn/bn_exp.c	2009-06-17 04:26:09.000000000 -0700
+++ openssl-0.9.8r/crypto/bn/bn_exp.c	2011-11-29 13:23:44.068122508 -0800
@@ -561,7 +561,7 @@ static int MOD_EXP_CTIME_COPY_FROM_PREBU
 
 /* Given a pointer value, compute the next address that is a cache line multiple. */
 #define MOD_EXP_CTIME_ALIGN(x_) \
-	((unsigned char*)(x_) + (MOD_EXP_CTIME_MIN_CACHE_LINE_WIDTH - (((BN_ULONG)(x_)) & (MOD_EXP_CTIME_MIN_CACHE_LINE_MASK))))
+	((unsigned char*)(x_) + (MOD_EXP_CTIME_MIN_CACHE_LINE_WIDTH - (((BN_ADDR)(x_)) & (MOD_EXP_CTIME_MIN_CACHE_LINE_MASK))))
 
 /* This variant of BN_mod_exp_mont() uses fixed windows and the special
  * precomputation memory layout to limit data-dependency to a minimum
